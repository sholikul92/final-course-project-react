{"ast":null,"code":"// src/index.ts\nimport { getActiveElement, getAllFocusable, isTabbable } from \"@chakra-ui/dom-utils\";\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useCallback, useRef } from \"react\";\nfunction preventReturnFocus(containerRef) {\n  const el = containerRef.current;\n  if (!el) return false;\n  const activeElement = getActiveElement(el);\n  if (!activeElement) return false;\n  if (el.contains(activeElement)) return false;\n  if (isTabbable(activeElement)) return true;\n  return false;\n}\nfunction useFocusOnHide(containerRef, options) {\n  const {\n    shouldFocus: shouldFocusProp,\n    visible,\n    focusRef\n  } = options;\n  const shouldFocus = shouldFocusProp && !visible;\n  useUpdateEffect(() => {\n    if (!shouldFocus) return;\n    if (preventReturnFocus(containerRef)) {\n      return;\n    }\n    const el = (focusRef == null ? void 0 : focusRef.current) || containerRef.current;\n    let rafId;\n    if (el) {\n      rafId = requestAnimationFrame(() => {\n        el.focus({\n          preventScroll: true\n        });\n      });\n      return () => {\n        cancelAnimationFrame(rafId);\n      };\n    }\n  }, [shouldFocus, containerRef, focusRef]);\n}\nvar defaultOptions = {\n  preventScroll: true,\n  shouldFocus: false\n};\nfunction useFocusOnShow(target) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n  const {\n    focusRef,\n    preventScroll,\n    shouldFocus,\n    visible\n  } = options;\n  const element = isRefObject(target) ? target.current : target;\n  const autoFocusValue = shouldFocus && visible;\n  const autoFocusRef = useRef(autoFocusValue);\n  const lastVisibleRef = useRef(visible);\n  useSafeLayoutEffect(() => {\n    if (!lastVisibleRef.current && visible) {\n      autoFocusRef.current = autoFocusValue;\n    }\n    lastVisibleRef.current = visible;\n  }, [visible, autoFocusValue]);\n  const onFocus = useCallback(() => {\n    if (!visible || !element || !autoFocusRef.current) return;\n    autoFocusRef.current = false;\n    if (element.contains(document.activeElement)) return;\n    if (focusRef == null ? void 0 : focusRef.current) {\n      requestAnimationFrame(() => {\n        var _a;\n        (_a = focusRef.current) == null ? void 0 : _a.focus({\n          preventScroll\n        });\n      });\n    } else {\n      const tabbableEls = getAllFocusable(element);\n      if (tabbableEls.length > 0) {\n        requestAnimationFrame(() => {\n          tabbableEls[0].focus({\n            preventScroll\n          });\n        });\n      }\n    }\n  }, [visible, preventScroll, element, focusRef]);\n  useUpdateEffect(() => {\n    onFocus();\n  }, [onFocus]);\n  useEventListener(element, \"transitionend\", onFocus);\n}\nfunction isRefObject(val) {\n  return \"current\" in val;\n}\nexport { useFocusOnHide, useFocusOnShow };","map":{"version":3,"names":["getActiveElement","getAllFocusable","isTabbable","useEventListener","useSafeLayoutEffect","useUpdateEffect","useCallback","useRef","preventReturnFocus","containerRef","el","current","activeElement","contains","useFocusOnHide","options","shouldFocus","shouldFocusProp","visible","focusRef","rafId","requestAnimationFrame","focus","preventScroll","cancelAnimationFrame","defaultOptions","useFocusOnShow","target","element","isRefObject","autoFocusValue","autoFocusRef","lastVisibleRef","onFocus","document","_a","tabbableEls","length","val"],"sources":["/home/sholikulardian/grader/react/final-course-project/react-lanjutan-final-project-student-portal-v2/node_modules/.pnpm/@chakra-ui+react-use-focus-effect@2.0.11_react@18.2.0/node_modules/@chakra-ui/react-use-focus-effect/dist/index.mjs"],"sourcesContent":["// src/index.ts\nimport {\n  getActiveElement,\n  getAllFocusable,\n  isTabbable\n} from \"@chakra-ui/dom-utils\";\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useCallback, useRef } from \"react\";\nfunction preventReturnFocus(containerRef) {\n  const el = containerRef.current;\n  if (!el)\n    return false;\n  const activeElement = getActiveElement(el);\n  if (!activeElement)\n    return false;\n  if (el.contains(activeElement))\n    return false;\n  if (isTabbable(activeElement))\n    return true;\n  return false;\n}\nfunction useFocusOnHide(containerRef, options) {\n  const { shouldFocus: shouldFocusProp, visible, focusRef } = options;\n  const shouldFocus = shouldFocusProp && !visible;\n  useUpdateEffect(() => {\n    if (!shouldFocus)\n      return;\n    if (preventReturnFocus(containerRef)) {\n      return;\n    }\n    const el = (focusRef == null ? void 0 : focusRef.current) || containerRef.current;\n    let rafId;\n    if (el) {\n      rafId = requestAnimationFrame(() => {\n        el.focus({ preventScroll: true });\n      });\n      return () => {\n        cancelAnimationFrame(rafId);\n      };\n    }\n  }, [shouldFocus, containerRef, focusRef]);\n}\nvar defaultOptions = {\n  preventScroll: true,\n  shouldFocus: false\n};\nfunction useFocusOnShow(target, options = defaultOptions) {\n  const { focusRef, preventScroll, shouldFocus, visible } = options;\n  const element = isRefObject(target) ? target.current : target;\n  const autoFocusValue = shouldFocus && visible;\n  const autoFocusRef = useRef(autoFocusValue);\n  const lastVisibleRef = useRef(visible);\n  useSafeLayoutEffect(() => {\n    if (!lastVisibleRef.current && visible) {\n      autoFocusRef.current = autoFocusValue;\n    }\n    lastVisibleRef.current = visible;\n  }, [visible, autoFocusValue]);\n  const onFocus = useCallback(() => {\n    if (!visible || !element || !autoFocusRef.current)\n      return;\n    autoFocusRef.current = false;\n    if (element.contains(document.activeElement))\n      return;\n    if (focusRef == null ? void 0 : focusRef.current) {\n      requestAnimationFrame(() => {\n        var _a;\n        (_a = focusRef.current) == null ? void 0 : _a.focus({ preventScroll });\n      });\n    } else {\n      const tabbableEls = getAllFocusable(element);\n      if (tabbableEls.length > 0) {\n        requestAnimationFrame(() => {\n          tabbableEls[0].focus({ preventScroll });\n        });\n      }\n    }\n  }, [visible, preventScroll, element, focusRef]);\n  useUpdateEffect(() => {\n    onFocus();\n  }, [onFocus]);\n  useEventListener(element, \"transitionend\", onFocus);\n}\nfunction isRefObject(val) {\n  return \"current\" in val;\n}\nexport {\n  useFocusOnHide,\n  useFocusOnShow\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}